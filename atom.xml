<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>惊鸿一瞥</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-06-26T10:10:13.315Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yang Yan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo+Github搭建个人博客笔记续-主题配置</title>
    <link href="http://yoursite.com/2016/06/26/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%AC%94%E8%AE%B0%E7%BB%AD-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2016/06/26/Hexo-Github搭建个人博客笔记续-主题配置/</id>
    <published>2016-06-26T09:07:12.000Z</published>
    <updated>2016-06-26T10:10:13.315Z</updated>
    
    <content type="html">&lt;p&gt;Hexo默认的主题如果你不太喜欢的话，可以选择自己喜欢的主题曲安装,可以从这个&lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Themes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo主题网站&lt;/a&gt;选择  , 点击Demo 链接可以查看每个主题的样子。&lt;/p&gt;
&lt;p&gt;最后我选择的Theme为Next主题，简洁优雅的风格，我很喜欢,下面就开始对博客进行一番改造了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://theme-next.iissnan.com/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Next主题官方文档&lt;/a&gt;还算是比较详细,大家可以参考它来进行安装和配置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Hexo有两份主要的配置文件(_config.yml),一份位于站点目录下称为站点配置文件，一份位于主题目录下称为主题配置文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Next主题安装&quot;&gt;&lt;a href=&quot;#Next主题安装&quot; class=&quot;headerlink&quot; title=&quot;Next主题安装&quot;&gt;&lt;/a&gt;Next主题安装&lt;/h3&gt;&lt;p&gt;Hexo安装主题的方式非常简单，只需要将主题文件拷贝到站点目录的themes目录下，然后修改下配置文件即可。具体到Next来说，安装步骤如下：&lt;/p&gt;
&lt;p&gt;####下载主题：克隆最新版本的方式&lt;br&gt;在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout代码：&lt;/p&gt;
&lt;p&gt;$ cd your-hexo-site&lt;br&gt;$ git clone &lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/iissnan/hexo-theme-next&lt;/a&gt; themes/next&lt;/p&gt;
&lt;h4 id=&quot;启用主题：&quot;&gt;&lt;a href=&quot;#启用主题：&quot; class=&quot;headerlink&quot; title=&quot;启用主题：&quot;&gt;&lt;/a&gt;启用主题：&lt;/h4&gt;&lt;p&gt;与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。&lt;br&gt;启用 NexT 主题&lt;br&gt;theme: next&lt;/p&gt;
&lt;p&gt;到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。&lt;/p&gt;
&lt;h4 id=&quot;验证主题&quot;&gt;&lt;a href=&quot;#验证主题&quot; class=&quot;headerlink&quot; title=&quot;验证主题&quot;&gt;&lt;/a&gt;验证主题&lt;/h4&gt;&lt;p&gt;首先启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是 hexo s –debug。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出：&lt;br&gt;INFO  Hexo is running at &lt;a href=&quot;http://0.0.0.0:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://0.0.0.0:4000/&lt;/a&gt;. Press Ctrl+C to stop.&lt;/p&gt;
&lt;p&gt;此时即可使用浏览器访问 &lt;a href=&quot;http://localhost:4000，检查站点是否正确运行。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000，检查站点是否正确运行。&lt;/a&gt;&lt;br&gt;当你看到站点的外观与下图所示类似时即说明你已成功安装 NexT 主题。这是 NexT 默认的 Scheme —— Muse&lt;/p&gt;
&lt;h3 id=&quot;Next主题配置&quot;&gt;&lt;a href=&quot;#Next主题配置&quot; class=&quot;headerlink&quot; title=&quot;Next主题配置&quot;&gt;&lt;/a&gt;Next主题配置&lt;/h3&gt;&lt;p&gt;现在，你已经成功安装并启用了 NexT 主题。下一步我们将要更改一些主题的设定，包括个性化以及集成第三方服务。&lt;/p&gt;
&lt;h4 id=&quot;主题设定&quot;&gt;&lt;a href=&quot;#主题设定&quot; class=&quot;headerlink&quot; title=&quot;主题设定&quot;&gt;&lt;/a&gt;主题设定&lt;/h4&gt;&lt;p&gt;Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Muse - 默认Scheme，这是 NexT 最初的版本，黑白主调，大量留白&lt;/li&gt;
&lt;li&gt;Mist - Muse 的紧凑版本，整洁有序的单栏外观&lt;/li&gt;
&lt;li&gt;Pisces - 双栏 Scheme，小家碧玉似的清新&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Scheme 的切换通过更改 主题配置文件，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释# 即可。&lt;br&gt;选择 Pisce Scheme&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;#scheme: Muse&lt;/li&gt;
&lt;li&gt;#scheme: Mist&lt;/li&gt;
&lt;li&gt;scheme: Pisces&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;设置语言&quot;&gt;&lt;a href=&quot;#设置语言&quot; class=&quot;headerlink&quot; title=&quot;设置语言&quot;&gt;&lt;/a&gt;设置语言&lt;/h4&gt;&lt;p&gt;编辑站点配置文件将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下：&lt;br&gt;language: zh-Hans&lt;/p&gt;
&lt;p&gt;编辑 主题配置文件 ,修改以下内容：&lt;/p&gt;
&lt;p&gt;设定菜单内容，对应的字段是 menu。 菜单内容的设置格式是：item name: link。其中 item name 是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。&lt;br&gt;菜单示例配置&lt;br&gt;menu:  home: /&lt;br&gt;  archives: /archives&lt;/p&gt;
&lt;p&gt;  #about: /about&lt;/p&gt;
&lt;p&gt;  #categories: /categories  tags: /tags&lt;/p&gt;
&lt;p&gt;  #commonweal: /404.html&lt;br&gt;若你的站点运行在子目录中，请将链接前缀的 / 去掉&lt;br&gt;NexT 默认的菜单项有（标注  的项表示需要手动创建这个页面）：&lt;br&gt;键值设定值显示文本（简体中文）homehome: /主页archivesarchives: /archives归档页categoriescategories: /categories分类页 tagstags: /tags标签页 aboutabout: /about关于页面 commonwealcommonweal: /404.html公益 404 &lt;/p&gt;
&lt;p&gt;设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 languages/{language}.yml （{language} 为你所使用的语言）。&lt;br&gt;以简体中文为例，若你需要添加一个菜单项，比如 something。那么就需要修改简体中文对应的翻译文件 languages/zh-Hans.yml，在 menu 字段下添加一项：&lt;br&gt;menu:  home: 首页&lt;br&gt;  archives: 归档&lt;br&gt;  categories: 分类&lt;br&gt;  tags: 标签&lt;br&gt;  about: 关于&lt;br&gt;  search: 搜索&lt;br&gt;  commonweal: 公益404  something: 有料&lt;/p&gt;
&lt;p&gt;菜单图标配置示例&lt;br&gt;menu_icons:  enable: true&lt;br&gt;  Icon Mapping.  home: home&lt;br&gt;  about: user&lt;br&gt;  categories: th&lt;br&gt;  tags: tags&lt;br&gt;  archives: archive&lt;br&gt;  commonweal: heartbeat&lt;/p&gt;
&lt;p&gt;在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的 Font Awesome 图标名字） 的情况下，NexT 将会使用作为图标。&lt;br&gt;请注意键值（如 home）的大小写要严格匹配&lt;/p&gt;
&lt;p&gt;设置完后，在git bash命令行输入：&lt;br&gt;hexo clean&lt;br&gt;hexo s –debug&lt;/p&gt;
&lt;p&gt;经过以上的配置后，我们看到我新设置的Next主题的页面：&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo默认的主题如果你不太喜欢的话，可以选择自己喜欢的主题曲安装,可以从这个&lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Themes&quot;&gt;Hexo主题网站&lt;/a&gt;选择  , 点击Demo 链接可以查看每个主题的样子。&lt;/p&gt;
&lt;p&gt;最后我选择的Theme为Next主题，简洁优雅的风格，我很喜欢,下面就开始对博客进行一番改造了。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://theme-next.iissnan.com/getting-started.html&quot;&gt;Next主题官方文档&lt;/a&gt;还算是比较详细,大家可以参考它来进行安装和配置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Hexo有两份主要的配置文件(_config.yml),一份位于站点目录下称为站点配置文件，一份位于主题目录下称为主题配置文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github搭建个人博客笔记</title>
    <link href="http://yoursite.com/2016/06/20/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/06/20/Hexo-Github搭建个人博客笔记/</id>
    <published>2016-06-20T15:10:54.000Z</published>
    <updated>2016-06-26T08:42:20.506Z</updated>
    
    <content type="html">&lt;p&gt;之前看到好多人都在github上托管自己的博客，用markdown编辑的，弄得都挺好的，可羡慕了，一直想也要自己弄弄玩玩。网上一搜好多中方法搭建自己的博客&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用 Github Pages搭建&lt;/li&gt;
&lt;li&gt;使用 jekyll 搭建&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;最终自己选择用Hexo+Github这种方式，于是自己在周末花了大半天的时间终于搭建好了自己的个人博客，啦啦啦啦就是本博客啦，瞬间觉得自己比格高了起来，瞬间觉得自己对得起程序媛这个称号了。下面跟大家分享一下如何搭建自己的个人博客，网上也有很多的参考资料，这里主要是我的比较粗略的笔记，希望对大家有所帮助。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装git的windows版本&quot;&gt;&lt;a href=&quot;#安装git的windows版本&quot; class=&quot;headerlink&quot; title=&quot;安装git的windows版本&quot;&gt;&lt;/a&gt;安装git的windows版本&lt;/h3&gt;&lt;p&gt;可以参考我之前写过的一篇博客 &lt;a href=&quot;http://blog.csdn.net/huluedeai/article/details/51367852&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git学习-安装&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装node-js&quot;&gt;&lt;a href=&quot;#安装node-js&quot; class=&quot;headerlink&quot; title=&quot;安装node.js&quot;&gt;&lt;/a&gt;安装node.js&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-v4.4.5-x64.msi&lt;/a&gt;&lt;br&gt;安装完成后再命令行输入以下命令查看安装成功否：&lt;br&gt;node -v&lt;br&gt;npm -v&lt;/p&gt;
&lt;h3 id=&quot;安装-hexo&quot;&gt;&lt;a href=&quot;#安装-hexo&quot; class=&quot;headerlink&quot; title=&quot;安装 hexo&quot;&gt;&lt;/a&gt;安装 hexo&lt;/h3&gt;&lt;p&gt;在cmd命令行&lt;br&gt;npm install -g hexo&lt;br&gt;然后更新hexo&lt;br&gt;npm update -g hexo&lt;/p&gt;
&lt;p&gt;安装完成后再命令行查看是否安装成功：&lt;br&gt;hexo -v&lt;/p&gt;
&lt;p&gt;以下操作都可以到git bash下运行, 因为最后要把博客托管到github服务器上, 进入你想要创建博客的目录 eg ：MyGitBlog/hexo&lt;/p&gt;
&lt;h3 id=&quot;部署-hexo&quot;&gt;&lt;a href=&quot;#部署-hexo&quot; class=&quot;headerlink&quot; title=&quot;部署 hexo&quot;&gt;&lt;/a&gt;部署 hexo&lt;/h3&gt;&lt;p&gt;cd  MyGitBlog/hexo&lt;br&gt;hexo init&lt;/p&gt;
&lt;p&gt;Hexo会自动在目标文件夹中建立网站所需的所有文件。&lt;/p&gt;
&lt;p&gt;安装依赖包：&lt;br&gt;npm instll&lt;/p&gt;
&lt;p&gt;至此，博客搭建成功！当然仅仅是本地的了，此时执行：&lt;br&gt;hexo g&lt;br&gt;即可生成静态页面，然后执行&lt;br&gt;hexo s&lt;/p&gt;
&lt;p&gt;访问 &lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt; 即可看到你的博客。&lt;/p&gt;
&lt;p&gt;但是上面的页面只是限于你本机使用，别人无法访问。有服务器的可以把他配置到服务骑上，这里采用的是提交到github，由他来托管。就可以方便的访问了。&lt;/p&gt;
&lt;h3 id=&quot;部署-静态页面到Github&quot;&gt;&lt;a href=&quot;#部署-静态页面到Github&quot; class=&quot;headerlink&quot; title=&quot;部署 静态页面到Github&quot;&gt;&lt;/a&gt;部署 静态页面到Github&lt;/h3&gt;&lt;p&gt;在github上建立一个仓库：用户名.github.io 的仓库。如github用户名为：txadf,仓库为：txadf.github.io 地址为 ：&lt;a href=&quot;https://github.com/txadf/txadf.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/txadf/txadf.github.io.git&lt;/a&gt;&lt;br&gt;然后打开blog 文件夹下的 _config.yml 文件，在最后修改为如下代码：&lt;br&gt;deploy:&lt;br&gt;  type: git&lt;br&gt;  repo: &lt;a href=&quot;https://github.com/txadf/txadf.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/txadf/txadf.github.io.git&lt;/a&gt;&lt;br&gt;  branch: master&lt;/p&gt;
&lt;p&gt;Note： type: 后面有空格&lt;/p&gt;
&lt;p&gt;注意还要用下面命令：安装 hexo-deployer-git，否则会出现Deployer not found：git的error。&lt;br&gt;npm install hexo-deployer-git –save&lt;/p&gt;
&lt;p&gt;最后运行命令：hexo deploy&lt;/p&gt;
&lt;p&gt;于是发现你当前本地目录的文件更新到github上了。 happy ing.&lt;/p&gt;
&lt;p&gt;查看页面：&lt;a href=&quot;https://txadf.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://txadf.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Tips&quot;&gt;&lt;a href=&quot;#Tips&quot; class=&quot;headerlink&quot; title=&quot;Tips&quot;&gt;&lt;/a&gt;Tips&lt;/h3&gt;&lt;p&gt;Hexo部署时出现“ERROR Deployer not found: git”的解决办法&lt;br&gt;网上关于此错误的解决办法已经过时了，因为新安装的 Hexo 出现这种问题并不是因为 _config.yml 文件中deploy项的type被误写为github，正确地写成”type: git”在执行“hexo d”命令时依然出现这个问题。&lt;br&gt;一开始我也是百思不得其解，后来发现是因为没有安装 hexo-deployer-git。&lt;br&gt;在命令行中执行“npm install hexo-deployer-git –save”命令，完成后再执行“hexo d”你会发现这个问题已经轻松地解决了。&lt;br&gt;遇到问题后建议先去翻一翻官方文档，看看是不是自己疏忽了什么，别直接去找答案，因为即便是大牛给出的答案，也有可能是过时的（或牛头不对马嘴的）。&lt;br&gt;另附 Hexo中文文档 地址：&lt;a href=&quot;https://hexo.io/zh-cn/docs/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/zh-cn/docs/index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考文献：&lt;a href=&quot;http://jingyan.baidu.com/album/9113f81b01c4e72b3214c7d3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jingyan.baidu.com/album/9113f81b01c4e72b3214c7d3.html&lt;/a&gt; （有图有真相）&lt;br&gt;最完美的参考：segment fault &lt;a href=&quot;https://segmentfault.com/a/1190000003101692&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://segmentfault.com/a/1190000003101692&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前看到好多人都在github上托管自己的博客，用markdown编辑的，弄得都挺好的，可羡慕了，一直想也要自己弄弄玩玩。网上一搜好多中方法搭建自己的博客&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用 Github Pages搭建&lt;/li&gt;
&lt;li&gt;使用 jekyll 搭建&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;最终自己选择用Hexo+Github这种方式，于是自己在周末花了大半天的时间终于搭建好了自己的个人博客，啦啦啦啦就是本博客啦，瞬间觉得自己比格高了起来，瞬间觉得自己对得起程序媛这个称号了。下面跟大家分享一下如何搭建自己的个人博客，网上也有很多的参考资料，这里主要是我的比较粗略的笔记，希望对大家有所帮助。&lt;br&gt;
    
    </summary>
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>My First Blog</title>
    <link href="http://yoursite.com/2016/06/18/My-First-Blog/"/>
    <id>http://yoursite.com/2016/06/18/My-First-Blog/</id>
    <published>2016-06-18T15:02:37.000Z</published>
    <updated>2016-06-26T08:39:36.602Z</updated>
    
    <content type="html">&lt;p&gt;This is my first blog. I am so exciting!!!&lt;/p&gt;
&lt;p&gt;在接下来的日子里，我会好好维护这个博客，我会在博客里记录以下几方面的内容&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;工作中遇到的问题&lt;/li&gt;
&lt;li&gt;学习的新技术&lt;/li&gt;
&lt;li&gt;工作总结和生活感悟&lt;/li&gt;
&lt;li&gt;读书笔记&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;我的CSDN博客惊鸿一瞥&quot;&gt;&lt;a href=&quot;#我的CSDN博客惊鸿一瞥&quot; class=&quot;headerlink&quot; title=&quot;我的CSDN博客惊鸿一瞥&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://blog.csdn.net/huluedeai&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的CSDN博客惊鸿一瞥&lt;/a&gt;&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;十分感谢您花费时间阅读这篇博客!&lt;/p&gt;
&lt;p&gt;作者 [@Yang Yan][3]&lt;br&gt;2016-06-18&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This is my first blog. I am so exciting!!!&lt;/p&gt;
&lt;p&gt;在接下来的日子里，我会好好维护这个博客，我会在博客里记录以下几方面的内容&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;工作中遇到的问题&lt;/li&gt;
&lt;li&gt;学习的新技术&lt;/li&gt;
&lt;li&gt;工作总结和生活感悟&lt;/li&gt;
&lt;li&gt;读书笔记
    
    </summary>
    
      <category term="Blog" scheme="http://yoursite.com/categories/Blog/"/>
    
    
  </entry>
  
</feed>
